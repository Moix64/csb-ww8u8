{"version":3,"sources":["scrollToView.js","App.js","index.js"],"names":["columns","key","name","ScrollToRow","direction","useState","rows","i","push","id","title","count","value","setValue","gridRef","useRef","style","marginBlockEnd","marginInlineEnd","inlineSize","type","onChange","event","target","onClick","current","scrollToRow","Number","ref","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iQAGMA,EAAU,CACd,CAAEC,IAAK,KAAMC,KAAM,MACnB,CAAED,IAAK,QAASC,KAAM,SACtB,CAAED,IAAK,QAASC,KAAM,UAGT,SAASC,EAAT,GAAqC,IAAdC,EAAa,EAAbA,UACpC,EAAeC,oBAAS,WAGtB,IAFA,IAAMC,EAAO,GAEJC,EAAI,EAAGA,EAAI,IAAMA,IACxBD,EAAKE,KAAK,CACRC,GAAIF,EACJG,MAAM,SAAD,OAAWH,GAChBI,MAAW,IAAJJ,IAIX,OAAOD,KAXFA,EAAP,oBAaA,EAA0BD,mBAAS,MAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAUC,iBAAO,MAEvB,OACE,qCACE,sBAAKC,MAAO,CAAEC,eAAgB,GAA9B,UACE,sBAAMD,MAAO,CAAEE,gBAAiB,GAAhC,yBACA,uBACEF,MAAO,CAAEG,WAAY,IACrBC,KAAK,SACLR,MAAOA,EACPS,SAAU,SAACC,GAAD,OAAWT,EAASS,EAAMC,OAAOX,UAE7C,wBACEQ,KAAK,SACLI,QAAS,kBAAMV,EAAQW,QAAQC,YAAYC,OAAOf,KAFpD,8BAOF,cAAC,IAAD,CACEgB,IAAKd,EACLd,QAASA,EACTM,KAAMA,EACNF,UAAWA,OC5CJ,SAASyB,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,mCACE,cAAC3B,EAAD,QCFR,IAAM4B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,K","file":"static/js/main.ce54d431.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport DataGrid from \"react-data-grid\";\r\n\r\nconst columns = [\r\n  { key: \"id\", name: \"ID\" },\r\n  { key: \"title\", name: \"Title\" },\r\n  { key: \"count\", name: \"Count\" }\r\n];\r\n\r\nexport default function ScrollToRow({ direction }) {\r\n  const [rows] = useState(() => {\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < 1000; i++) {\r\n      rows.push({\r\n        id: i,\r\n        title: `Title ${i}`,\r\n        count: i * 1000\r\n      });\r\n    }\r\n\r\n    return rows;\r\n  });\r\n  const [value, setValue] = useState(\"10\");\r\n  const gridRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBlockEnd: 5 }}>\r\n        <span style={{ marginInlineEnd: 5 }}>Row index: </span>\r\n        <input\r\n          style={{ inlineSize: 50 }}\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={(event) => setValue(event.target.value)}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => gridRef.current.scrollToRow(Number(value))}\r\n        >\r\n          Scroll to row\r\n        </button>\r\n      </div>\r\n      <DataGrid\r\n        ref={gridRef}\r\n        columns={columns}\r\n        rows={rows}\r\n        direction={direction}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport ScrollToRow from \"./scrollToView\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <>\n        <ScrollToRow />\n      </>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}